"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/cart";
exports.ids = ["pages/api/cart"];
exports.modules = {

/***/ "./pages/api/cart.js":
/*!***************************!*\
  !*** ./pages/api/cart.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    console.log('running post request');\n    const order = req.body.order; // console.log(order)\n\n    const newOrder = await prisma.order.upsert({\n      where: {\n        id: order.id\n      },\n      update: {\n        orderItems: {\n          create: {\n            quantity: 1,\n            product: {\n              connect: {\n                id: req.body.product.id\n              }\n            }\n          }\n        }\n      },\n      create: {\n        status: order.status,\n        subtotal: order.subtotal,\n        tax: order.tax,\n        tip: order.tip,\n        total: order.total,\n        orderItems: {\n          create: {\n            quantity: 1,\n            product: {\n              connect: {\n                id: req.body.product.id\n              }\n            }\n          }\n        },\n        user: {\n          connect: {\n            id: 1\n          }\n        }\n      }\n    });\n    res.json(newOrder);\n  }\n\n  if (req.method === \"GET\") {\n    console.log('running get request');\n    const user = \"7189643418\";\n    const order = await prisma.order.findFirst({\n      where: {\n        status: \"open\",\n        user: {\n          phoneNumber: user\n        }\n      },\n      include: {\n        orderItems: {\n          include: {\n            product: true\n          }\n        }\n      },\n      orderBy: {\n        id: \"asc\"\n      }\n    });\n    res.json(order);\n  }\n\n  if (req.method === \"PATCH\") {\n    console.log('running patch request');\n    const orderItemReq = req.body;\n    console.log(orderItemReq);\n    const orderItem = await prisma.orderItem.update({\n      where: {\n        id: orderItemReq.id\n      },\n      data: {\n        quantity: orderItemReq.quantity\n      }\n    });\n    res.json(orderItem);\n  }\n\n  if (req.method === \"DELETE\") {\n    console.log(\"running delete request\");\n    const orderItemReq = req.body;\n    console.log(orderItemReq);\n    const orderItem = await prisma.orderItem.delete({\n      where: {\n        id: orderItemReq.id\n      }\n    });\n    res.status(201).json({\n      message: 'successfully deleted order item'\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNDLEdBQVIsQ0FBWSx1QkFBWjtBQUNBLFVBQU13QixZQUFZLEdBQUc1QixHQUFHLENBQUNNLElBQXpCO0FBQ0FILElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZd0IsWUFBWjtBQUNBLFVBQU1DLFNBQVMsR0FBRyxNQUFNL0IsTUFBTSxDQUFDK0IsU0FBUCxDQUFpQmxCLE1BQWpCLENBQXdCO0FBQzlDRixNQUFBQSxLQUFLLEVBQUU7QUFDTEMsUUFBQUEsRUFBRSxFQUFFa0IsWUFBWSxDQUFDbEI7QUFEWixPQUR1QztBQUk5Q29CLE1BQUFBLElBQUksRUFBRTtBQUNKaEIsUUFBQUEsUUFBUSxFQUFFYyxZQUFZLENBQUNkO0FBRG5CO0FBSndDLEtBQXhCLENBQXhCO0FBUUFiLElBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBU00sU0FBVDtBQUNEOztBQUVELE1BQUk3QixHQUFHLENBQUNFLE1BQUosS0FBZSxRQUFuQixFQUE2QjtBQUMzQkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksd0JBQVo7QUFDQSxVQUFNd0IsWUFBWSxHQUFHNUIsR0FBRyxDQUFDTSxJQUF6QjtBQUNBSCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWXdCLFlBQVo7QUFDQSxVQUFNQyxTQUFTLEdBQUcsTUFBTS9CLE1BQU0sQ0FBQytCLFNBQVAsQ0FBaUJFLE1BQWpCLENBQXdCO0FBQzlDdEIsTUFBQUEsS0FBSyxFQUFFO0FBQ0xDLFFBQUFBLEVBQUUsRUFBRWtCLFlBQVksQ0FBQ2xCO0FBRFo7QUFEdUMsS0FBeEIsQ0FBeEI7QUFLQVQsSUFBQUEsR0FBRyxDQUFDZ0IsTUFBSixDQUFXLEdBQVgsRUFBZ0JNLElBQWhCLENBQXFCO0FBQUVTLE1BQUFBLE9BQU8sRUFBRTtBQUFYLEtBQXJCO0FBQ0Q7QUFDSjs7QUFFRCxpRUFBZWpDLE9BQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50LWFwcC8uL3BhZ2VzL2FwaS9jYXJ0LmpzP2IyN2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5jb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KClcblxuXG5hc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSxyZXMpIHtcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdydW5uaW5nIHBvc3QgcmVxdWVzdCcpXG4gICAgICAgIGNvbnN0IG9yZGVyID0gcmVxLmJvZHkub3JkZXI7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG9yZGVyKVxuICAgICAgICBjb25zdCBuZXdPcmRlciA9IGF3YWl0IHByaXNtYS5vcmRlci51cHNlcnQoe1xuICAgICAgICAgIHdoZXJlOiB7IGlkOiBvcmRlci5pZCB9LFxuICAgICAgICAgIHVwZGF0ZToge1xuICAgICAgICAgICAgb3JkZXJJdGVtczoge1xuICAgICAgICAgICAgICBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgICAgICAgICBwcm9kdWN0OiB7XG4gICAgICAgICAgICAgICAgICBjb25uZWN0OiB7IGlkOiByZXEuYm9keS5wcm9kdWN0LmlkIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNyZWF0ZToge1xuICAgICAgICAgICAgc3RhdHVzOiBvcmRlci5zdGF0dXMsXG4gICAgICAgICAgICBzdWJ0b3RhbDogb3JkZXIuc3VidG90YWwsXG4gICAgICAgICAgICB0YXg6IG9yZGVyLnRheCxcbiAgICAgICAgICAgIHRpcDogb3JkZXIudGlwLFxuICAgICAgICAgICAgdG90YWw6IG9yZGVyLnRvdGFsLFxuICAgICAgICAgICAgb3JkZXJJdGVtczoge1xuICAgICAgICAgICAgICBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgICAgICAgICBwcm9kdWN0OiB7XG4gICAgICAgICAgICAgICAgICBjb25uZWN0OiB7IGlkOiByZXEuYm9keS5wcm9kdWN0LmlkIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICAgIGNvbm5lY3Q6IHsgaWQ6IDF9IFxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmVzLmpzb24obmV3T3JkZXIpICAgIFxuICAgIH1cblxuICAgIGlmIChyZXEubWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgICBjb25zb2xlLmxvZygncnVubmluZyBnZXQgcmVxdWVzdCcpXG4gICAgICBjb25zdCB1c2VyID0gXCI3MTg5NjQzNDE4XCJcbiAgICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgcHJpc21hLm9yZGVyLmZpbmRGaXJzdCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgc3RhdHVzOiBcIm9wZW5cIixcbiAgICAgICAgICB1c2VyOiB7IHBob25lTnVtYmVyOiB1c2VyIH1cbiAgICAgICAgfSxcbiAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgIG9yZGVySXRlbXM6IHtcbiAgICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgICAgcHJvZHVjdDogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb3JkZXJCeToge1xuICAgICAgICAgIGlkOiBcImFzY1wiXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICByZXMuanNvbihvcmRlcilcbiAgICB9XG5cbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gXCJQQVRDSFwiKSB7XG4gICAgICBjb25zb2xlLmxvZygncnVubmluZyBwYXRjaCByZXF1ZXN0JylcbiAgICAgIGNvbnN0IG9yZGVySXRlbVJlcSA9IHJlcS5ib2R5XG4gICAgICBjb25zb2xlLmxvZyhvcmRlckl0ZW1SZXEpXG4gICAgICBjb25zdCBvcmRlckl0ZW0gPSBhd2FpdCBwcmlzbWEub3JkZXJJdGVtLnVwZGF0ZSh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgaWQ6IG9yZGVySXRlbVJlcS5pZFxuICAgICAgICB9LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgcXVhbnRpdHk6IG9yZGVySXRlbVJlcS5xdWFudGl0eVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgcmVzLmpzb24ob3JkZXJJdGVtKVxuICAgIH1cblxuICAgIGlmIChyZXEubWV0aG9kID09PSBcIkRFTEVURVwiKSB7XG4gICAgICBjb25zb2xlLmxvZyhcInJ1bm5pbmcgZGVsZXRlIHJlcXVlc3RcIilcbiAgICAgIGNvbnN0IG9yZGVySXRlbVJlcSA9IHJlcS5ib2R5XG4gICAgICBjb25zb2xlLmxvZyhvcmRlckl0ZW1SZXEpXG4gICAgICBjb25zdCBvcmRlckl0ZW0gPSBhd2FpdCBwcmlzbWEub3JkZXJJdGVtLmRlbGV0ZSh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgaWQ6IG9yZGVySXRlbVJlcS5pZFxuICAgICAgICB9XG4gICAgICB9KVxuICAgICAgcmVzLnN0YXR1cygyMDEpLmpzb24oeyBtZXNzYWdlOiAnc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgb3JkZXIgaXRlbScgfSk7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVyIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsInByaXNtYSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJjb25zb2xlIiwibG9nIiwib3JkZXIiLCJib2R5IiwibmV3T3JkZXIiLCJ1cHNlcnQiLCJ3aGVyZSIsImlkIiwidXBkYXRlIiwib3JkZXJJdGVtcyIsImNyZWF0ZSIsInF1YW50aXR5IiwicHJvZHVjdCIsImNvbm5lY3QiLCJzdGF0dXMiLCJzdWJ0b3RhbCIsInRheCIsInRpcCIsInRvdGFsIiwidXNlciIsImpzb24iLCJmaW5kRmlyc3QiLCJwaG9uZU51bWJlciIsImluY2x1ZGUiLCJvcmRlckJ5Iiwib3JkZXJJdGVtUmVxIiwib3JkZXJJdGVtIiwiZGF0YSIsImRlbGV0ZSIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/api/cart.js\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/cart.js"));
module.exports = __webpack_exports__;

})();