"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/cart";
exports.ids = ["pages/api/cart"];
exports.modules = {

/***/ "./pages/api/cart.js":
/*!***************************!*\
  !*** ./pages/api/cart.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    console.log('running post request');\n    const order = req.body; // console.log(order)\n\n    const newOrder = await prisma.order.upsert({\n      where: {\n        id: order.orderId\n      },\n      update: {\n        orderItems: {\n          create: {\n            quantity: 1,\n            product: {\n              connect: {\n                id: order.product.id\n              }\n            }\n          }\n        }\n      },\n      create: {\n        status: \"open\",\n        subtotal: 0,\n        tax: 0,\n        tip: 0,\n        total: 0,\n        orderItems: {\n          create: {\n            quantity: 1,\n            product: {\n              connect: {\n                id: order.product.id\n              }\n            }\n          }\n        },\n        user: {\n          connect: {\n            id: 1\n          }\n        }\n      }\n    });\n    console.log('disconnecting now...');\n    await prisma.$disconnect();\n    res.json(newOrder);\n  }\n\n  if (req.method === \"GET\") {\n    console.log('running get request');\n    const user = \"7189643418\";\n    const order = await prisma.order.findFirst({\n      where: {\n        status: \"open\",\n        user: {\n          phoneNumber: user\n        }\n      },\n      include: {\n        orderItems: {\n          include: {\n            product: true\n          }\n        }\n      },\n      orderBy: {\n        id: \"asc\"\n      }\n    });\n    console.log('disconnecting now...');\n    await prisma.$disconnect();\n    res.json(order);\n  }\n\n  if (req.method === \"PATCH\") {\n    console.log('running patch request');\n    const orderItemReq = req.body;\n    console.log(orderItemReq);\n    const orderItem = await prisma.orderItem.update({\n      where: {\n        id: orderItemReq.id\n      },\n      data: {\n        quantity: orderItemReq.quantity\n      }\n    });\n    res.json(orderItem);\n  }\n\n  if (req.method === \"DELETE\") {\n    console.log(\"running delete request\");\n    const orderItemReq = req.body;\n    console.log(orderItemReq);\n    const orderItem = await prisma.orderItem.delete({\n      where: {\n        id: orderItemReq.id\n      }\n    });\n    res.status(201).json({\n      message: 'successfully deleted order item'\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cnQuanM/YjI3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcmlzbWFDbGllbnQgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcbmNvbnN0IHByaXNtYSA9IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5cbmFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLHJlcykge1xuICAgIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3J1bm5pbmcgcG9zdCByZXF1ZXN0JylcbiAgICAgICAgY29uc3Qgb3JkZXIgPSByZXEuYm9keTtcbiAgICAgICAgLy8gY29uc29sZS5sb2cob3JkZXIpXG4gICAgICAgIGNvbnN0IG5ld09yZGVyID0gYXdhaXQgcHJpc21hLm9yZGVyLnVwc2VydCh7XG4gICAgICAgICAgd2hlcmU6IHsgaWQ6IG9yZGVyLm9yZGVySWQgfSxcbiAgICAgICAgICB1cGRhdGU6IHtcbiAgICAgICAgICAgIG9yZGVySXRlbXM6IHtcbiAgICAgICAgICAgICAgY3JlYXRlOiB7XG4gICAgICAgICAgICAgICAgcXVhbnRpdHk6IDEsXG4gICAgICAgICAgICAgICAgcHJvZHVjdDoge1xuICAgICAgICAgICAgICAgICAgY29ubmVjdDogeyBpZDogb3JkZXIucHJvZHVjdC5pZCB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBjcmVhdGU6IHtcbiAgICAgICAgICAgIHN0YXR1czogXCJvcGVuXCIsXG4gICAgICAgICAgICBzdWJ0b3RhbDogMCxcbiAgICAgICAgICAgIHRheDogMCxcbiAgICAgICAgICAgIHRpcDogMCxcbiAgICAgICAgICAgIHRvdGFsOiAwLFxuICAgICAgICAgICAgb3JkZXJJdGVtczoge1xuICAgICAgICAgICAgICBjcmVhdGU6IHtcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogMSxcbiAgICAgICAgICAgICAgICBwcm9kdWN0OiB7XG4gICAgICAgICAgICAgICAgICBjb25uZWN0OiB7IGlkOiBvcmRlci5wcm9kdWN0LmlkIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICAgIGNvbm5lY3Q6IHsgaWQ6IDEgfSBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIGNvbnNvbGUubG9nKCdkaXNjb25uZWN0aW5nIG5vdy4uLicpXG4gICAgICAgIGF3YWl0IHByaXNtYS4kZGlzY29ubmVjdCgpXG4gICAgICAgIHJlcy5qc29uKG5ld09yZGVyKVxuICAgIH1cblxuICAgIGlmIChyZXEubWV0aG9kID09PSBcIkdFVFwiKSB7XG4gICAgICBjb25zb2xlLmxvZygncnVubmluZyBnZXQgcmVxdWVzdCcpXG4gICAgICBjb25zdCB1c2VyID0gXCI3MTg5NjQzNDE4XCJcbiAgICAgIGNvbnN0IG9yZGVyID0gYXdhaXQgcHJpc21hLm9yZGVyLmZpbmRGaXJzdCh7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgc3RhdHVzOiBcIm9wZW5cIixcbiAgICAgICAgICB1c2VyOiB7IHBob25lTnVtYmVyOiB1c2VyIH1cbiAgICAgICAgfSxcbiAgICAgICAgaW5jbHVkZToge1xuICAgICAgICAgIG9yZGVySXRlbXM6IHtcbiAgICAgICAgICAgIGluY2x1ZGU6IHtcbiAgICAgICAgICAgICAgcHJvZHVjdDogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgb3JkZXJCeToge1xuICAgICAgICAgIGlkOiBcImFzY1wiXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICBjb25zb2xlLmxvZygnZGlzY29ubmVjdGluZyBub3cuLi4nKVxuICAgICAgYXdhaXQgcHJpc21hLiRkaXNjb25uZWN0KClcbiAgICAgIHJlcy5qc29uKG9yZGVyKVxuICAgIH1cblxuICAgIGlmIChyZXEubWV0aG9kID09PSBcIlBBVENIXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdydW5uaW5nIHBhdGNoIHJlcXVlc3QnKVxuICAgICAgY29uc3Qgb3JkZXJJdGVtUmVxID0gcmVxLmJvZHlcbiAgICAgIGNvbnNvbGUubG9nKG9yZGVySXRlbVJlcSlcbiAgICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IHByaXNtYS5vcmRlckl0ZW0udXBkYXRlKHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICBpZDogb3JkZXJJdGVtUmVxLmlkXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBxdWFudGl0eTogb3JkZXJJdGVtUmVxLnF1YW50aXR5XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICByZXMuanNvbihvcmRlckl0ZW0pXG4gICAgfVxuXG4gICAgaWYgKHJlcS5tZXRob2QgPT09IFwiREVMRVRFXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicnVubmluZyBkZWxldGUgcmVxdWVzdFwiKVxuICAgICAgY29uc3Qgb3JkZXJJdGVtUmVxID0gcmVxLmJvZHlcbiAgICAgIGNvbnNvbGUubG9nKG9yZGVySXRlbVJlcSlcbiAgICAgIGNvbnN0IG9yZGVySXRlbSA9IGF3YWl0IHByaXNtYS5vcmRlckl0ZW0uZGVsZXRlKHtcbiAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICBpZDogb3JkZXJJdGVtUmVxLmlkXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgICByZXMuc3RhdHVzKDIwMSkuanNvbih7IG1lc3NhZ2U6ICdzdWNjZXNzZnVsbHkgZGVsZXRlZCBvcmRlciBpdGVtJyB9KTtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXIiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwicHJpc21hIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsImNvbnNvbGUiLCJsb2ciLCJvcmRlciIsImJvZHkiLCJuZXdPcmRlciIsInVwc2VydCIsIndoZXJlIiwiaWQiLCJvcmRlcklkIiwidXBkYXRlIiwib3JkZXJJdGVtcyIsImNyZWF0ZSIsInF1YW50aXR5IiwicHJvZHVjdCIsImNvbm5lY3QiLCJzdGF0dXMiLCJzdWJ0b3RhbCIsInRheCIsInRpcCIsInRvdGFsIiwidXNlciIsIiRkaXNjb25uZWN0IiwianNvbiIsImZpbmRGaXJzdCIsInBob25lTnVtYmVyIiwiaW5jbHVkZSIsIm9yZGVyQnkiLCJvcmRlckl0ZW1SZXEiLCJvcmRlckl0ZW0iLCJkYXRhIiwiZGVsZXRlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/api/cart.js\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/api/cart.js"));
module.exports = __webpack_exports__;

})();